import streamlit as st
import pandas as pd
import plotly.express as px
from utils import prepare_sostojba_na_hv, clean_headers

# --- Streamlit App Config ---
st.set_page_config(page_title="–ò–°–ò–î–û–†–ê –ü—Ä–≤ –¢–µ—Å—Ç –ü–∞–∫–µ—Ç", layout="wide", initial_sidebar_state="collapsed")

# --- Page Title ---
st.title("üñ§ –ò–°–ò–î–û–†–ê - –ü—Ä–≤ –¢–µ—Å—Ç –ü–∞–∫–µ—Ç (Dark Dashboard)")

# --- File Upload ---
uploaded_file = st.file_uploader("üìÑ –ü—Ä–∏–∫–∞—á–∏ Excel –¥–∞—Ç–æ—Ç–µ–∫–∞", type=["xlsx"])

if uploaded_file:
    try:
        # Auto-load '–ü—Ä–∏–º–µ–Ω–∏ –ø–æ–¥–∞—Ç–æ—Ü–∏ ' sheet
        df = pd.read_excel(uploaded_file, sheet_name="–ü—Ä–∏–º–µ–Ω–∏ –ø–æ–¥–∞—Ç–æ—Ü–∏ ")
        df = clean_headers(df)

        st.success("‚úÖ –ü–æ–¥–∞—Ç–æ—Ü–∏—Ç–µ —Å–µ —É—Å–ø–µ—à–Ω–æ –≤—á–∏—Ç–∞–Ω–∏.")

        # --- –ü—Ä–≤ –¢–µ—Å—Ç –ü–∞–∫–µ—Ç Button ---
        if st.button("üöÄ –ì–µ–Ω–µ—Ä–∏—Ä–∞—ò –ü—Ä–≤ –¢–µ—Å—Ç –ü–∞–∫–µ—Ç"):
            result = prepare_sostojba_na_hv(df)

            # --- TABS Layout ---
            tab1, tab2, tab3 = st.tabs(["üìä Summary", "üìà Charts", "üìã Table"])

            # --- Summary Tab ---
            with tab1:
                st.subheader("üìä Summary Metrics")
                col1, col2 = st.columns(2)
                with col1:
                    st.metric(label="üí∞ –í–∫—É–ø–µ–Ω –ò–∑–Ω–æ—Å (–¥–µ–Ω–∞—Ä–∏)", value=f"{int(result['sum_in_denars'])}")
                with col2:
                    st.metric(label="üìÑ –ë—Ä–æ—ò –Ω–∞ –§–∏–ª—Ç—Ä–∏—Ä–∞–Ω–∏ –†–µ–¥–æ–≤–∏", value=f"{len(result['filtered_df'])}")

            # --- Charts Tab ---
            with tab2:
                st.subheader("üìà –ò–∑–Ω–æ—Å –ø–æ –í–∏–¥ –Ω–∞ –ò–∑–Ω–æ—Å (DRVR, DSK, PRM, POBJ)")
                fig = px.bar(
                    result["filtered_df"],
                    x="–ò–∑–Ω–æ—Å –≤–æ –¥–µ–Ω–∞—Ä–∏",
                    y="–í–∏–¥ –Ω–∞ –∏–∑–Ω–æ—Å",
                    orientation="h",
                    color="–í–∏–¥ –Ω–∞ –∏–∑–Ω–æ—Å",
                    color_discrete_sequence=px.colors.qualitative.Safe,
                    title="–ê–Ω–∏–º–∏—Ä–∞–Ω –•–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–µ–Ω –ë–∞—Ä –ß–∞—Ä—Ç",
                )
                st.plotly_chart(fig, use_container_width=True)

            # --- Table Tab ---
            with tab3:
                st.subheader("üìã –ü—Ä–µ–≥–ª–µ–¥ –Ω–∞ –ü—Ä–≤ –¢–µ—Å—Ç –ü–∞–∫–µ—Ç")
                
                # Main Table
                table_data = {
                    "–°–æ—Å—Ç–æ—ò–±–∞ –Ω–∞ —Ö.–≤ –Ω–∞ –ø–æ—á–µ—Ç–æ–∫ –Ω–∞ –ø–µ—Ä–∏–æ–¥ (–≥–ª–∞–≤–Ω–∏–Ω–∞)": [int(result["sum_in_denars"]), int(result["sum_in_denars"]), ", ".join(result["used_types"])],
                    "–ù–µ—Ç–æ —Ç—Ä–∞–Ω—Å–∞–∫—Ü–∏–∏": ["‚è≥ Yet", "‚è≥ Yet", "‚è≥ Yet"],
                    "–¶–µ–Ω–æ–≤–Ω–∏ –ø—Ä–æ–º–µ–Ω–∏": ["‚è≥ Yet", "‚è≥ Yet", "‚è≥ Yet"],
                    "–ö—É—Ä—Å–Ω–∏ —Ä–∞–∑–ª–∏–∫–∏": ["‚è≥ Yet", "‚è≥ Yet", "‚è≥ Yet"],
                    "–û—Å—Ç–∞–Ω–∞—Ç–∏ –ø—Ä–æ–º–µ–Ω–∏": ["‚è≥ Yet", "‚è≥ Yet", "‚è≥ Yet"],
                    "–°–æ—Å—Ç–æ—ò–±–∞ –Ω–∞ —Ö.–≤ –Ω–∞ –∫—Ä–∞—ò –Ω–∞ –ø–µ—Ä–∏–æ–¥ (–≥–ª–∞–≤–Ω–∏–Ω–∞)": ["‚è≥ Yet", "‚è≥ Yet", "‚è≥ Yet"],
                }
                table_df = pd.DataFrame(table_data, index=["Rule", "–ò–∑–Ω–æ—Å –≤–æ –¥–µ–Ω–∞—Ä–∏", "–í–∏–¥ –Ω–∞ –∏–∑–Ω–æ—Å"])
                st.dataframe(table_df, height=300, use_container_width=True)

                # Filtered raw data
                st.subheader("üîç –§–∏–ª—Ç—Ä–∏—Ä–∞–Ω–∏ –†–µ–¥–æ–≤–∏ (DRVR, DSK, PRM, POBJ)")
                st.dataframe(result["filtered_df"], height=400, use_container_width=True)

    except Exception as e:
        st.error(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≤—á–∏—Ç—É–≤–∞—ö–µ –Ω–∞ –¥–∞—Ç–æ—Ç–µ–∫–∞—Ç–∞: {e}")

else:
    st.info("üìÇ –ü—Ä–∏–∫–∞—á–µ—Ç–µ .xlsx –¥–∞—Ç–æ—Ç–µ–∫–∞ –∑–∞ –¥–∞ –∑–∞–ø–æ—á–Ω–µ—Ç–µ.")
